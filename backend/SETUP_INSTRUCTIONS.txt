================================================================================
           EMAIL NOTIFICATIONS SETUP - STEP BY STEP GUIDE
================================================================================

WHAT YOU'LL GET:
‚úÖ Automatic booking confirmation emails
‚úÖ Customer notifications
‚úÖ Mechanic notifications  
‚úÖ Professional email templates

TIME NEEDED: 5 minutes

================================================================================
                            STEP 1: GET GMAIL PASSWORD
================================================================================

1. Open this link in your browser:
   https://myaccount.google.com/apppasswords

2. You'll be asked to login to your Gmail account

3. If you see "2-Step Verification is not enabled":
   - Click on "Turn on 2-Step Verification"
   - Follow the steps (takes 2 minutes)
   - Come back to: https://myaccount.google.com/apppasswords

4. Once on App Passwords page:
   - Select app: "Mail"
   - Select device: "Other (Custom name)"
   - Type: "Car Service App"
   - Click "Generate"

5. You'll see a 16-character password like:
   
   ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
   ‚îÇ  abcd efgh ijkl mnop     ‚îÇ  ‚Üê COPY THIS!
   ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
   
   IMPORTANT: Copy this password (without spaces)

================================================================================
                        STEP 2: CREATE .ENV FILE
================================================================================

1. In your backend folder, create a NEW FILE named:  .env
   (Note: It starts with a dot!)

   Location: C:\Users\Manpreet\Downloads\FIgma\car-service-mern\backend\.env

2. Add these lines to the .env file:

---START COPYING FROM HERE---

# Email Configuration
EMAIL_SERVICE=gmail
EMAIL_USER=your-email@gmail.com
EMAIL_PASSWORD=paste-your-16-char-password-here

# Email Display Settings
EMAIL_FROM_NAME=Car Service Platform
EMAIL_FROM=your-email@gmail.com
EMAIL_REPLY_TO=your-email@gmail.com

# Frontend URL
FRONTEND_URL=http://localhost:3000

# Database (you probably have this already)
MONGODB_URI=mongodb://localhost:27017/carservice
JWT_SECRET=your_jwt_secret_key_here
PORT=5000

---STOP COPYING HERE---

3. REPLACE these values:
   - your-email@gmail.com ‚Üí Your actual Gmail address
   - paste-your-16-char-password-here ‚Üí The 16-char password from Step 1
                                         (Remove spaces! Make it: abcdefghijklmnop)

4. SAVE the file

================================================================================
                          STEP 3: TEST THE SETUP
================================================================================

1. Open Command Prompt or PowerShell in backend folder

2. Run this command:

   node src/utils/checkEmailStatus.js

3. EXPECTED OUTPUT:

   ‚úÖ .env file exists
   ‚úÖ EMAIL_USER is set: your-email@gmail.com
   ‚úÖ EMAIL_PASSWORD is set: ****************
   ‚úÖ Email server is ready to send messages
   
   üéâ EMAIL IS CONFIGURED AND WORKING!

4. If you see this ‚Üë - SUCCESS! Go to Step 4

5. If you see errors:
   ‚ùå .env file NOT FOUND
      ‚Üí Make sure .env file is in backend folder
   
   ‚ùå EMAIL_USER is NOT set
      ‚Üí Check .env file has EMAIL_USER=your@email.com
   
   ‚ùå Invalid login
      ‚Üí Make sure you're using the 16-char app password
      ‚Üí Remove any spaces from the password

================================================================================
                        STEP 4: SEND TEST EMAILS
================================================================================

1. Run this command:

   node src/utils/testEmail.js

2. EXPECTED OUTPUT:

   üß™ Testing Email Configuration...
   üìß Test emails will be sent to: your@email.com
   
   1Ô∏è‚É£ Testing Booking Created Email...
   ‚úÖ Booking created emails sent successfully!
   
   2Ô∏è‚É£ Testing Booking Confirmed Email...
   ‚úÖ Booking confirmed email sent successfully!
   
   3Ô∏è‚É£ Testing Booking Completed Email...
   ‚úÖ Booking completed email sent successfully!
   
   üéâ Email tests completed!

3. CHECK YOUR EMAIL INBOX!
   - Look for 3 emails from "Car Service Platform"
   - Check SPAM folder if you don't see them

================================================================================
                        STEP 5: START YOUR SERVER
================================================================================

1. Start backend server:

   npm start

2. Look for this line in console:

   ‚úÖ Email server is ready to send messages

3. If you see this ‚Üë - Everything is working!

================================================================================
                    STEP 6: TEST WITH REAL BOOKING
================================================================================

1. Start frontend (in a new terminal):
   
   cd ../frontend
   npm start

2. Open browser: http://localhost:3000

3. Login as customer

4. Create a booking:
   - Go to "Book Service"
   - Select vehicle and service
   - Choose date and time
   - Submit

5. CHECK EMAILS:
   - Customer email: Should receive booking confirmation
   - Mechanic email: Should receive new booking notification

6. CHECK BACKEND CONSOLE:
   You should see:
   
   ‚úÖ Email sent to customer@example.com: Booking Confirmation
   ‚úÖ Email sent to mechanic@example.com: New Booking Request

================================================================================
                           TROUBLESHOOTING
================================================================================

PROBLEM: "Email not configured"
SOLUTION: Make sure .env file has EMAIL_USER and EMAIL_PASSWORD

PROBLEM: "Invalid login"
SOLUTION: 
  - Use app password (16 chars), NOT your Gmail password
  - Make sure 2FA is enabled on Gmail
  - Remove spaces from password

PROBLEM: ".env file NOT FOUND"
SOLUTION: Create .env file in backend folder (same level as package.json)

PROBLEM: Emails not arriving
SOLUTION:
  1. Check SPAM/Junk folder
  2. Try sending to different email
  3. Check console logs for errors
  4. Verify email address is correct

PROBLEM: Test passes but no emails
SOLUTION:
  1. Wait 1-2 minutes (email can be delayed)
  2. Check spam folder
  3. Try different email address

================================================================================
                         QUICK REFERENCE
================================================================================

Check Status:
  node src/utils/checkEmailStatus.js

Test Emails:
  node src/utils/testEmail.js

Start Server:
  npm start

View Guides:
  - QUICK_START_EMAIL.md (you're reading it!)
  - TEST_EMAIL_GUIDE.md (detailed testing)
  - EMAIL_SETUP_GUIDE.md (full documentation)

================================================================================
                         WHAT EMAILS ARE SENT?
================================================================================

When Customer Books:
  ‚Üí Customer gets: Booking confirmation
  ‚Üí Mechanic gets: New booking alert

When Mechanic Confirms:
  ‚Üí Customer gets: Confirmation notification

When Booking Rescheduled:
  ‚Üí Customer gets: Updated schedule
  ‚Üí Mechanic gets: Update notification

When Booking Cancelled:
  ‚Üí Both get: Cancellation notice

When Service Completed:
  ‚Üí Customer gets: Completion email + review request

================================================================================
                              DONE!
================================================================================

Your email system is ready! üéâ

NEXT STEPS:
1. ‚úÖ Test with real bookings
2. ‚úÖ Customize email templates (optional)
3. ‚úÖ Switch to professional email service for production (SendGrid/AWS SES)

Need help? Run: node src/utils/checkEmailStatus.js

================================================================================

